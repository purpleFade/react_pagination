{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","startRange","endRange","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","pageItems","filter","className","href","onClick","map","listOfOptions","App","useState","setPerPage","setCurrentPage","firstNumber","endNumber","min","id","value","onChange","event","newPerPage","Number","target","htmlFor","newPage","ReactDOM","render","document","getElementById"],"mappings":"iMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAKrC,IDFLC,EACAC,ECHAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACpBA,GAAQ,GAAKA,GAAQJ,GACvBD,EAAaK,IAOXC,GDdNX,ECiBE,EDhBFC,ECiBEC,EDfuBT,GCQAW,EAAc,GAAKD,EAAU,EAC/BC,EAAcD,GDPtBS,QAAO,SAACf,GAAD,OAAOA,GAAKG,GAAcH,GAAKI,MCgBrD,OACE,qCAEE,qBAAIY,UAAU,aAAd,UAEE,oBAAIA,UAAS,oBAA+B,IAAhBT,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAI,WAAMV,EAAc,GACxB,gBAA+B,IAAhBA,EACfW,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,oBAWDX,EAAW,EAAGa,GAAYU,KAAI,SAACnB,GAAD,OAC7B,oBACEgB,UAAS,oBAAehB,IAAMO,EAAc,SAAW,IADzD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAI,WAAMjB,GACVkB,QAAS,kBAAMN,EAAiBZ,IAJlC,SAMGA,KAREA,MAaT,oBAAIgB,UAAS,oBAAeT,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAI,WAAMV,EAAc,GACxB,gBAAeA,IAAgBE,EAC/BS,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,uBAYJ,6BACGO,EAAUK,KAAI,SAACnB,GAAD,OACb,oBAAI,UAAQ,OAAZ,wBAAoCA,IAAZA,YC3E5BoB,EAAgB,CAAC,EAAG,EAAG,GAAI,IAEpBC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAc,IAArD,mBAAOd,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KAaMC,GAAuBlB,EAAc,GAAKD,EAAU,EACpDoB,EAAoBhB,KAAKiB,IAAIpB,EAAcD,EAAS,IAE1D,OACE,sBAAKU,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBAEIkB,EAFJ,cAGQC,EAHR,aAMA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRY,GAAG,kBACHZ,UAAU,eACVa,MAAOvB,EACPwB,SA/BkB,SAACC,GAC3B,IAAMC,EAAaC,OAAOF,EAAMG,OAAOL,OAEvCN,EAAWS,GACXR,EAAe,IAsBT,SAOGJ,EAAcD,KAAI,SAACnB,GAAD,OACjB,wBAAoB6B,MAAO7B,EAA3B,SACGA,GADUA,EAAI,UAMvB,uBAAOmC,QAAQ,kBAAkBnB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aA1CmB,SAAC4B,GACxBZ,EAAeY,UChBnBC,IAASC,OACP,cAAC,IAAD,UAAe,cAAC,EAAD,MAAyBC,SAASC,eAAe,W","file":"static/js/main.8884828d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getNumbersInRange(\n  from: number, to: number,\n  startRange:number,\n  endRange:number,\n): number[] {\n  const numbers:number[] = getNumbers(from, to);\n\n  return numbers.filter((n) => n >= startRange && n <= endRange);\n}\n","import { getNumbers, getNumbersInRange } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  const firstItemOnPage = (currentPage - 1) * perPage + 1;\n  const lastItemOnPage = currentPage * perPage;\n\n  const pageItems = getNumbersInRange(\n    firstItemOnPage,\n    lastItemOnPage,\n    1,\n    total,\n  );\n\n  return (\n    <>\n      {/* Pagination links */}\n      <ul className=\"pagination\">\n        {/* Previous page link */}\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${currentPage - 1}`}\n            aria-disabled={currentPage === 1}\n            onClick={() => handlePageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {/* Page number links */}\n        {getNumbers(1, totalPages).map((n) => (\n          <li\n            className={`page-item ${n === currentPage ? 'active' : ''}`}\n            key={n}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${n}`}\n              onClick={() => handlePageChange(n)}\n            >\n              {n}\n            </a>\n          </li>\n        ))}\n        {/* Next page link */}\n        <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${currentPage + 1}`}\n            aria-disabled={currentPage === totalPages}\n            onClick={() => handlePageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      {/* Item list */}\n      <ul>\n        {pageItems.map((n) => (\n          <li data-cy=\"item\" key={n}>{`Item ${n}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst listOfOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(listOfOptions[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(event.target.value);\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  const firstNumber: number = (currentPage - 1) * perPage + 1;\n  const endNumber: number = Math.min(currentPage * perPage, 42);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          firstNumber\n        } - ${endNumber} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {listOfOptions.map((n) => (\n              <option key={n + 1} value={n}>\n                {n}\n              </option>\n            ))}\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'),\n);\n"],"sourceRoot":""}